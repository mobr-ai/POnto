@prefix ponto: <http://www.mobr.ai/ontologies/ponto#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ns: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@base <http://www.mobr.ai/ontologies/ponto#> .
<http://www.mobr.ai/ontologies/ponto#> a owl:Ontology ;
	owl:versionIRI <http://www.mobr.ai/ontologies/ponto/v0/> ;
	dc:contributor "Marcio Moreno" , "Rafael Brandao" ;
	dc:creator "MOBR Systems" ;
	dc:title "POnto - An ontology for the Polkadot ecosystem" ;
	vann:preferredNamespacePrefix "ponto" ;
	rdfs:comment "This Polkadot ontology specification uses W3C RDF Schema and the Web Ontology Language. Its main source of information comes from discussions with the Polkadot community and official documentation."@en ;
	rdfs:seeAlso <https://github.com/mobr-ai/POnto> , <https://wiki.polkadot.network/> ;
	owl:versionInfo "0.0.2" ;
	ns:term_status "unstable" ;
    dc:license <https://www.apache.org/licenses/LICENSE-2.0> .
<https://www.apache.org/licenses/LICENSE-2.0>
    rdf:type dcterms:LicenseDocument ;
    rdfs:label "Apache License v2" ;
    dc:title "Apache License, Version 2.0" .
# this ontology uses modules aiming at a better organization
# basic ontology definitions
# general notion: a system architecture is composed by a group of components.
ponto:Architecture a owl:Class ;
    rdfs:label "System Architecture" ;
    rdfs:comment "A high-level structure of a software system that defines its components, their relationships, and their interactions." ;
    rdfs:subClassOf owl:Thing .
ponto:Component a owl:Class ;
    rdfs:label "Architecture Component" ;
    rdfs:comment "A specific technology entity that composes a system architecture or implementation." ;
    rdfs:subClassOf owl:Thing .
ponto:Module a owl:Class ;
    rdfs:label "Module" ;
    rdfs:comment "A set of components." ;
    rdfs:subClassOf owl:Thing .
ponto:Protocol a owl:Class ;
    rdfs:label "Protocol" ;
    rdfs:comment "A system of rules that allows two or more entities of a communications system to transmit information. The protocol defines the rules, syntax, semantics, and synchronization of communication and possible recovery methods." ;
    rdfs:subClassOf owl:Thing .
ponto:Collective a owl:Class ;
    rdfs:label "Collective" ;
    rdfs:comment " The ability to organize and act as a group (without needing to trust third parties like lawyers and jurisdictional courts)" ;
    rdfs:subClassOf owl:Thing .
ponto:SDK a owl:Class ;
    rdfs:label "Software Development Kit" ;
    rdfs:comment "A collection of software development tools in one installable package." ;
    rdfs:subClassOf owl:Thing .
ponto:VirtualMachine a owl:Class ;
    rdfs:label "Virtual Machine" ;
    rdfs:comment "A compute resource that uses software instead of a physical computer to run programs and deploy applications." ;
    rdfs:subClassOf owl:Thing .
ponto:ProgrammingLanguage a owl:Class ;
    rdfs:label "Programming Language" ;
    rdfs:comment "A system of notation for writing computer programs." ;
    rdfs:subClassOf ponto:Component .
ponto:DistributedLedger a owl:Class ;
    rdfs:label "Distributed Ledger" ;
    rdfs:comment "A decentralized and distributed digital ledger that is implemented by a network of computers (nodes) that participate in the network." ;
    rdfs:subClassOf ponto:Component .
ponto:Metadata a owl:Class ;
    rdfs:label "Metadata" ;
    rdfs:comment "Data that includes information about other data, such as information about a specific transaction." ;
    rdfs:subClassOf owl:Thing .
ponto:TVL a owl:Class ;
    rdfs:label "Total Value Locked" ;
    rdfs:comment "Total Value Locked (TVL) is a metric used to measure the total value of digital assets that are locked or staked." ;
    rdfs:subClassOf owl:Thing .
ponto:PullRequest a owl:Class ;
    rdfs:label "Pull Request" ;
    rdfs:comment "Pull requests let you tell others about changes you've pushed to a branch in a git repository. Once a pull request is opened, you can discuss and review the potential changes with collaborators and add follow-up commits before your changes are merged into the base branch." ;
    rdfs:subClassOf owl:Thing .
ponto:Dapp a owl:Class ;
    rdfs:label "Descentralized Application" ;
    rdfs:comment "Software application that runs as part of a distributed network as opposed to being run on a specific system or set of systems." ;
    rdfs:subClassOf ponto:Component .
ponto:OnchainGovernance a owl:Class ;
    rdfs:label "On-chain Governance" ;
    rdfs:comment "A governance system of a blockchain that is controlled by mechanisms on the blockchain. On-chain governance allows decisions to be made transparently. Note that there are a variety of different algorithms for making these decisions, such as simple majority voting, adaptive quorum biasing, or identity-based quadratic voting." ;
    rdfs:subClassOf ponto:Component .
ponto:Treasury a owl:Class ;
    rdfs:label "Treasury" ;
    rdfs:comment "The Treasury is a pot of funds collected through a portion of block production rewards, transaction fees, slashing, and staking inefficiencies." ;
    rdfs:subClassOf ponto:Component .
# A component is a part of an architecture
ponto:hasComponent a owl:ObjectProperty ;
    rdfs:domain ponto:Architecture ;
    rdfs:range ponto:Component .
# a distributed ledger may have pull requests
ponto:hasPR a owl:ObjectProperty ;
    rdfs:domain ponto:DistributedLedger ;
    rdfs:range ponto:PullRequest .
# A pull request has an opening date
ponto:opened a owl:DatatypeProperty ;
    rdfs:comment "The timestamp when the pull request was opened." ;
    rdfs:domain ponto:PullRequest ;
    rdfs:range xsd:dateTimeStamp .
ponto:BitfieldArray a owl:Class ;
    rdfs:label "Bitfield Array" ;
    rdfs:comment "A bitfield array contains single-bit values which indicate whether a candidate is available. The number of items is equal of to the number of availability cores and each bit represents a vote on the corresponding core in the given order." ;
    rdfs:subClassOf ponto:Component .
# wallet terminology
ponto:Wallet a owl:Class ;
    rdfs:label "Wallet" ;
    rdfs:comment "A program that allows one to store private keys and sign transactions on distributed ledgers" ;
    rdfs:subClassOf ponto:Component .
ponto:BrowserWallet a owl:Class ;
    rdfs:label "Browser Wallet" ;
    rdfs:comment "A wallet that runs in a web browser and can be accessed from any device." ;
    rdfs:subClassOf ponto:Wallet .
ponto:MobileWallet a owl:Class ;
    rdfs:label "Mobile Wallet" ;
    rdfs:comment "A wallet that runs on a mobile device and can be used to make payments on the go." ;
    rdfs:subClassOf ponto:Wallet .
# person, organization or modules
ponto:AccountHolder a owl:Class ;
    rdfs:label "Account Holder" ;
    rdfs:comment "An entity that holds one or more accounts, such as an individual or organization." ;
    rdfs:subClassOf owl:Thing .
ponto:Runtime a owl:Class ;
    rdfs:label "Runtime" ;
    rdfs:comment "The state transition function of a blockchain. It defines a valid algorithm for determining the state of the next block given the previous state." ;
    rdfs:subClassOf owl:Thing .
ponto:RuntimeModule a owl:Class ;
    rdfs:label "Runtime Module" ;
    rdfs:comment "A module that implements specific transition functions and features one might want to have in their runtime. Each module should have domain-specific logic. For example, a Balances module has logic to deal with accounts and balances. In Substrate, modules are called 'pallets'." ;
    rdfs:subClassOf ponto:Module .
ponto:Pallet a owl:Class ;
    rdfs:label "Pallet" ;
    rdfs:comment "Substrate Runtime Module. That is, a set of compoments and support libraries that can be used, modified and extended to build the runtime logic to suit the needs of blockchains." ;
    rdfs:subClassOf ponto:RuntimeModule .
ponto:PalletSection a owl:Class ;
    rdfs:label "Pallet Section" ;
    rdfs:comment "Information about each of the pallets in the runtime" ;
    rdfs:subClassOf ponto:Metadata .
ponto:PalletMethod a owl:Class ;
    rdfs:label "Pallet Method" ;
    rdfs:comment "A method of a pallet." ;
    rdfs:subClassOf ponto:Pallet .
ponto:Substrate a owl:Class ;
    rdfs:label "Substrate" ;
    rdfs:comment "A modular framework for building blockchains. Polkadot is built using Substrate. Chains built with Substrate will be easy to connect as parachains." ;
    rdfs:subClassOf ponto:SDK .
ponto:RootOrigin a owl:Class ;
    rdfs:label "Root Origin" ;
    rdfs:comment "A system-level origin in Substrate. This is the highest privilege level and can be thought of as the superuser of the runtime origin." ;
    rdfs:subClassOf ponto:SDK .
ponto:SCALE a owl:Class ;
    rdfs:label "SCALE" ;
    rdfs:comment "Substrate uses a lightweight and efficient encoding and decoding program to optimize how data is sent and received over the network. The program used to serialize and deserialize data is called the SCALE codec, with SCALE being an acronym for simple concatenated aggregate little-endian." ;
    rdfs:subClassOf owl:Thing .
ponto:FRAME a owl:Class ;
    rdfs:label "FRAME" ;
    rdfs:comment "The collection of Substrate-provided pallets" ;
    ponto:subClassOf ponto:Substrate .
#relationships
ponto:hasWallet rdfs:domain ponto:AccountHolder ;
    rdfs:range ponto:Wallet .
ponto:dependsOn rdfs:domain ponto:Module ;
    rdfs:range ponto:ReferenceCounter .
# oracle services in the Polkadot Ecosystem
ponto:Oracle a owl:Class ;
    rdfs:label "Oracle" ;
    rdfs:comment "Component that provides external data to smart contracts and decentralized applications (dApps) on the Polkadot network." ;
    rdfs:subClassOf ponto:Component .
ponto:DataFeed a owl:Class ;
    rdfs:label "Data Feed" ;
    rdfs:comment "A source of external data used by an oracle to provide data to a blockchain." ;
    rdfs:subClassOf ponto:Component .
ponto:Query a owl:Class ;
    rdfs:label "Query" ;
    rdfs:comment "A request for external data made by a smart contract or other component of a blockchain ecosystem." ;
    rdfs:subClassOf ponto:Component .
# governance in the Polkadot Ecosystem
ponto:Governance a owl:Class ;
    rdfs:label "Governance" ;
    rdfs:comment "The process of determining what changes to the network are permissible, such as modifications to code or movement of funds. The governance system in Polkadot is on-chain and revolves around stakeholder voting." ;
    rdfs:subClassOf ponto:Component .
# GovernanceV1
ponto:GovernanceV1 a owl:Class ;
    rdfs:label "Governance" ;
    rdfs:comment "Former Polkadot's governance system, which ensured the appropriate usage of treasury funds and enabled timely upgrades and fixes." ;
    rdfs:subClassOf ponto:Governance .
ponto:Council a owl:Class ;
    rdfs:label "Council" ;
    rdfs:comment "An on-chain entity comprising several actors, each represented as an on-chain account, which was part of Polkadot's GovernanceV1." ;
    rdfs:subClassOf ponto:Component .
ponto:TechnicalCommittee a owl:Class ;
    rdfs:label "Technical Committee" ;
    rdfs:comment "A technocratic committee to manage upgrade timelines." ;
    rdfs:subClassOf ponto:Component .
ponto:hasGov1Component a owl:ObjectProperty ;
    rdfs:domain ponto:GovernanceV1 ;
    rdfs:range ponto:Council ;
    rdfs:range ponto:TechnicalCommittee ;
    rdfs:range ponto:AccountHolder ;
    rdfs:range ponto:VoteDelegation .
# OpenGov
ponto:OpenGov a owl:Class ;
    rdfs:label "OpenGov" ;
    rdfs:comment "Previously known as Governance v2 (Gov2) during early development, Polkadot OpenGov serves as the current governance protocol for both Kusama and Polkadot." ;
    rdfs:subClassOf ponto:Governance .
ponto:Fellowship a owl:Class ;
    rdfs:label "Fellowship" ;
    rdfs:comment "A mostly self-governing expert body with a primary goal of representing humans who embody and contain the technical knowledge base of the Kusama and/or Polkadot networks and protocols." ;
    rdfs:subClassOf ponto:Component .
ponto:Origin a owl:Class ;
    rdfs:label "Origin" ;
    rdfs:comment "The initiator of an extrinsic. A simple origin would be the account that is sending a token to another account. Polkadot also supports more complex origin types, such as the root origin, from which privileged functions can be called. In OpenGov, each origin has a fixed set of privileges. When making a proposal, it is important to choose the origin that has the privilege to execute the referenda." ;
    rdfs:subClassOf ponto:Component .
ponto:Track a owl:Class ;
    rdfs:label "Track" ;
    rdfs:comment "Outlines the lifecycle for the proposal and is independent from other class's tracks. Having independent tracks allows the network to tailor the dynamics of referenda based upon their implied privilege level. Each track has its own dispatch origin and a preset configuration that governs the voting process and parameters." ;
    rdfs:subClassOf ponto:Component .
ponto:WhitelistPallet a owl:Class ;
    rdfs:label "Whitelist Pallet" ;
    rdfs:comment "Allows one Origin to escalate the privilege level of another Origin for a certain operation. In terms of OpenGov, it allows the Fellowship to authorise a new origin (which we will call Whitelisted-Root) to be executed with Root-level privileges." ;
    rdfs:subClassOf ponto:Pallet .
ponto:VotingPower a owl:Class ;
    rdfs:label "Voting Power" ;
    rdfs:comment "In the Polkadot multichain ecosystem, voting power is distributed among different entities based on their role and stake in the network." ;
    rdfs:subClassOf owl:Thing .
ponto:VoteDelegation a owl:Class ;
    rdfs:label "Vote Delegation" ;
    rdfs:comment "Ability to delegate voting power to another voter in the system. This works with conviction voting, allowing users to lock up tokens in order to increase the level of voting power their delegates wield on their behalf." ;
    rdfs:subClassOf owl:Thing .
ponto:MultiroleDelegation a owl:Class ;
    rdfs:label "Multirole Delegation" ;
    rdfs:comment "Allows users to specify a different delegate for every class of referendum in the system. If users do not want to delegate for a particular class of referendum then they can also retain direct control for that class." ;
    rdfs:subClassOf ponto:VoteDelegation .
ponto:hasVotingPower a owl:ObjectProperty ;
    rdfs:domain ponto:AccountHolder ;
    rdfs:domain ponto:Node ;
    rdfs:range xsd:boolean .
ponto:hasOpenGovComponent a owl:ObjectProperty ;
    rdfs:domain ponto:OpenGov ;
    rdfs:range ponto:Fellowship ;
    rdfs:range ponto:WhitelistPallet ;
    rdfs:range ponto:MultiroleDelegation ;
    rdfs:range ponto:Origin ;
    rdfs:range ponto:Track .
ponto:trackId a xsd:integer ;
    rdfs:label "Track Id" .
ponto:submissionDeposit a xsd:decimal ;
    rdfs:label "Submission Deposit" ;
    rdfs:comment "The minimum amount to be used as a (refundable) deposit to submit a public referendum proposal." .
ponto:decisionDeposit a xsd:decimal ;
    rdfs:label "Decision Deposit" ;
    rdfs:comment "This deposit is required for a referendum to progress to the decision phase after the end of prepare period." .
ponto:preparePeriod a xsd:integer ;
    rdfs:label "Prepare Period" ;
    rdfs:comment "The minimum time the referendum needs to wait before it can progress to the next phase after submission. Voting is enabled, but the votes do not count toward the outcome of the referendum yet." .
ponto:decisionPeriod a xsd:integer ;
    rdfs:label "Decision Period" ;
    rdfs:comment "Amount of time a decision may take to be approved to move to the confirming period. If the proposal is not approved by the end of the decision period, it gets rejected." .
ponto:confirmationPeriod a xsd:integer ;
    rdfs:label "Confirmation Period" ;
    rdfs:comment "The total time the referenda must meet both the min approval and support criteria during the decision period in order to pass and enter the enactment period." .
ponto:minEnactmentPeriod a xsd:integer ;
    rdfs:label "Min Enactment Period" ;
    rdfs:comment "Minimum time that an approved proposal must be in the dispatch queue after approval. The proposer has the option to set the enactment period to be of any value greater than the min enactment period." .
ponto:maxDeciding a xsd:integer ;
    rdfs:label "Max Deciding" ;
    rdfs:comment "The maximum number of referenda that can be in the decision period of a track all at once." .
ponto:conviction a xsd:decimal ;
    rdfs:label "Conviction" ;
    rdfs:comment "A multiplier to increase voting power." .
ponto:approval a xsd:decimal ;
    rdfs:label "Approval" ;
    rdfs:comment "The share of the approval vote-weight after adjustments for conviction against the total number of vote-weight for both approval and rejection." .
ponto:minApproval a xsd:decimal ;
    rdfs:label "Min Approval" ;
    rdfs:comment "The threshold of approval (along with the min support) needed for a proposal to meet the requirements of the confirm period." .
ponto:support a xsd:integer ;
    rdfs:label "Support" ;
    rdfs:comment "The total number of votes in approval (ignoring adjustments for conviction) compared to the total possible amount of votes that could be made in the system. Support also takes into account abstained votes." .
ponto:minSupport a xsd:integer ;
    rdfs:label "Min Support" ;
    rdfs:comment "The threshold of support (along with the min approval) needed for a proposal to meet the requirements of the confirm period." .
ponto:hasTrackId a rdf:Property ;
    rdfs:domain ponto:Track ;
    rdfs:range xsd:integer .
ponto:hasTrackId rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:trackId
] .
ponto:hasTrackOrigin a owl:ObjectProperty ;
    rdfs:domain ponto:Track ;
    rdfs:range ponto:Origin .
ponto:hasMaxDeciding a rdf:Property ;
    rdfs:domain ponto:Track ;
    rdfs:range xsd:integer .
ponto:hasMaxDeciding rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:maxDeciding
] .
ponto:hasPreparePeriod a rdf:Property ;
    rdfs:domain ponto:Track ;
    rdfs:range owl:integer .
ponto:hasPreparePeriod rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:preparePeriod
] .
ponto:hasDecisionDeposit a rdf:Property ;
    rdfs:domain ponto:Track ;
    rdfs:range xsd:decimal .
ponto:hasDecisionDeposit rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:decisionDeposit
] .
ponto:hasConfirmPeriod a rdf:Property ;
    rdfs:domain ponto:Track ;
    rdfs:range xsd:integer .
ponto:hasConfirmPeriod rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:confirmationPeriod
] .
# Governance entities
ponto:Proposal a owl:Class ;
    rdfs:label "Proposal" ;
    rdfs:comment "A potential function call to be voted on in a referendum. Proposals modify the behavior of the Polkadot network, from minor parameter tuning up to replacing the runtime code." ;
    rdfs:subClassOf owl:Thing .
ponto:Bounty a owl:Class ;
    rdfs:label "Bounty" ;
    rdfs:comment "A mechanism which works in some sense as the reverse of a Treasury Proposal, allowing the Polkadot Council to indicate that there is a need to do some task for the Polkadot network and allowing users to receive DOT in return for working on that task." ;
    rdfs:subClassOf ponto:GovernanceComponent .
ponto:Curator a owl:Class ;
    rdfs:label "Curator" ;
    rdfs:comment "A person, group, or other entity charged with judging and verifying the successful completion of a Bounty." ;
    rdfs:subClassOf owl:Thing .
ponto:Referendum a owl:Class ;
    rdfs:label "Referendum" ;
    rdfs:comment "A vote on whether or not a proposal should be accepted by the network. Referenda may be initiated by the Governance Council (gov1) or by the public (OpenGov), by a member of the public, or as the result of a previous proposal. Stakeholders vote on referenda, weighted by both the size of their stake (i.e. number of DOT held) and the amount of time they are willing to lock their tokens." ;
    rdfs:subClassOf owl:Thing .
ponto:Motion a owl:Class ;
    rdfs:label "Motion" ;
    rdfs:comment "A motion is essentially a 'referendum' or 'decision' being considered by the Council. The Council can vote on motions like approving Treasury Proposals or making proposals for the community to vote on." ;
    rdfs:subClassOf ponto:Referendum .
ponto:Vote a owl:Class ;
    rdfs:label "Vote" ;
    rdfs:comment "A means by which a preference is made known in the governance mechanism." ;
    rdfs:subClassOf owl:Thing .
ponto:leadin a xsd:string ;
    rdfs:comment "The first period in the track timeline structure. Until the proposals are in the lead-in period, they remain undecided." ;
    rdfs:label "Lead-in" .
ponto:deciding a xsd:string ;
    rdfs:comment "The second period in the track timeline structure. In the Decision Period votes can be cast. For a proposal to be approved, votes must satisfy the approval and support criteria for at least the Confirmation Period" ;
    rdfs:label "Deciding" .
ponto:confirmation a xsd:string ;
    rdfs:comment "A period in the track timeline structure. The minimum amount of time (within the Decision Period) the approval and support criteria must hold before the proposal is approved and moved to the enactment period." ;
    rdfs:label "Confirmation" .
ponto:enactment a xsd:string ;
    rdfs:comment "A period in the track timeline structure. Approved proposals enter the Enactment Period, after which the changes will be executed." ;
    rdfs:label "Enactment" .
ponto:currentReferendumPeriod a rdf:Property ;
    rdfs:domain ponto:Referendum ;
    rdfs:range xsd:string .
ponto:currentReferendumPeriod rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:leadin, ponto:deciding, ponto:confirmation, ponto:enactment
] .
#properties and relationships
ponto:hasReferendumBeneficiary a owl:ObjectProperty ;
    rdfs:domain ponto:Referendum ;
    rdfs:range ponto:Beneficiary .
ponto:voteDelegatedBy a owl:ObjectProperty ;
    owl:inverseOf ponto:delegatesVote ;
    rdfs:domain ponto:Vote ;
    rdfs:range ponto:Account .
ponto:hasVoter a owl:ObjectProperty ;
    rdfs:domain ponto:Vote ;
    rdfs:range ponto:Account .
ponto:hasAmount a owl:DatatypeProperty ;
    rdfs:domain ponto:Vote ;
    rdfs:range xsd:decimal .
ponto:hasConviction a owl:DatatypeProperty ;
    rdfs:domain ponto:Vote ;
    rdfs:range xsd:decimal .
ponto:hasDecision a owl:DatatypeProperty ;
    rdfs:domain ponto:Vote ;
    rdfs:range xsd:string .
ponto:aye a xsd:string ;
    rdfs:label "aye" ;
    rdfs:comment "a positive vote casting." .
ponto:nay a xsd:string ;
    rdfs:label "nay" ;
    rdfs:comment "a negative vote casting." .
ponto:abstained a xsd:string ;
    rdfs:label "abstained" ;
    rdfs:comment "a neutral vote casting." .
ponto:hasDecision rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:aye, ponto:nay, ponto:abstained
] .
ponto:initiateProposal a owl:ObjectProperty ;
    rdfs:domain ponto:StakeHolder ;
    rdfs:range ponto:Proposal .
ponto:voting a owl:ObjectProperty ;
    rdfs:label "Voting" ;
    rdfs:comment "The process of stakeholders determining whether or not a referendum should pass. Votes are weighted both by the number of DOT that the stakeholder account controls and the amount of time they are willing to lock their DOT." ;
    rdfs:domain ponto:StakeHolder ;
    rdfs:range ponto:Referendum .
ponto:tabling a owl:ObjectProperty ;
    rdfs:label "Tabling" ;
    rdfs:comment "In Polkadot governance, bringing a proposal to a vote via referendum. Note that this is the British meaning of 'tabling', which is different from the US version, which means 'to postpone' a measure." ;
    rdfs:domain ponto:Proposal ;
    rdfs:range ponto:Referendum .
ponto:verifyingBounty a owl:ObjectProperty ;
    rdfs:domain ponto:Curator ;
    rdfs:range ponto:Bounty .
# Assets and related subjects like account in the Polkadot Ecosystem
# assets
ponto:Asset a owl:Class ;
    rdfs:label "Asset" ;
    rdfs:comment "Representation of an asset on a distributed ledger." ;
    rdfs:subClassOf ponto:Component .
ponto:FungibleToken a owl:Class ;
    rdfs:label "Fungible Token" ;
    rdfs:comment "Divisible interchengable and non-unique unit of value that is used to represent assets on a distributed ledger." ;
    rdfs:subClassOf ponto:Asset .
ponto:NFT a owl:Class ;
    rdfs:label "Non-fungible Token" ;
    rdfs:comment "A non-fungible token is a token that does not hold the property of fungibility, which, in turn, means that it cannot be interchangeable and indistinguishable from other tokens. NFTs allow the tokenization of unique items and provide exclusive ownership for those tokens." ;
    rdfs:subClassOf ponto:Asset .
ponto:NativeToken a owl:Class ;
    rdfs:label "Native Token" ;
    rdfs:comment "The primary token used as the currency in a blockchain ecosystem, typically issued by the blockchain protocol itself." ;
    rdfs:subClassOf ponto:FungibleToken .
# account and account types
ponto:Account a owl:Class ;
    rdfs:label "Account" ;
    rdfs:comment "An address or a record on the blockchain that is used to store and manage cryptocurrency holdings or other types of assets." ;
    rdfs:subclasses ponto:LedgerRecord .
ponto:MultisigAccount a owl:Class ;
    rdfs:label "Multi-signature Account" ;
    rdfs:comment "A multisig is composed of one or more addresses and a threshold. The threshold defines how many signatories (participating addresses) need to agree on submitting an extrinsic for the call to be successful." ;
    rdfs:subclasses ponto:Account .
ponto:ProxyAccount a owl:Class ;
    rdfs:label "Proxy Account" ;
    rdfs:comment "Proxies are allowed to perform a limited amount of actions related to specific substrate pallets on behalf of another account." ;
    rdfs:subclasses ponto:Account .
ponto:ExternalAccount a owl:Class ;
    rdfs:label "External Account" ;
    rdfs:comment "An account that is controlled by an external system, such as an exchange or custodian." ;
    rdfs:subClassOf ponto:Account .
ponto:InjectedAccount a owl:Class ;
    rdfs:label "Injected Account" ;
    rdfs:comment "An account that is not directly managed by the Polkadot UI but can be accessed through it, such as accounts controlled by the Polkadot{.js} extension." ;
    rdfs:subClassOf ponto:Account .
ponto:NodeAccount a owl:Class ;
    rdfs:label "Node Account" ;
    rdfs:comment "An account that is used by a node to participate in block production or validation." ;
    rdfs:subClassOf ponto:Account .
ponto:SmartContract a owl:Class ;
    rdfs:label "Smart Contract" ;
    rdfs:comment "A self-executing contract that is stored on the blockchain and can interact with other contracts or accounts." ;
    rdfs:subClassOf ponto:Account .
ponto:CommunityQueue a owl:Class ;
    rdfs:label "Community Queue" ;
    rdfs:comment "The queue for proposals originating from individual accounts (i.e. not the Council) which are waiting to become referenda. Compare the External queue." ;
    rdfs:subClassOf ponto:Component .
ponto:ExternalQueue a owl:Class ;
    rdfs:label "External Queue" ;
    rdfs:comment "The queue for proposals originating with the Polkadot Council which are waiting to become referenda. Compare the Community queue." ;
    rdfs:subClassOf ponto:Component .
ponto:Crowdloan a owl:Class ;
    rdfs:label "Crowdloan" ;
    rdfs:comment "A mechanism for potential parachains to temporarily source tokens to win an auction for a parachain slot. Tokens gathered in this way are programmatically returned to the lender after the lease period is over or the crowdloan period ends." ;
    rdfs:subClassOf ponto:Component .
ponto:KeepAliveCheck a owl:Class ;
    rdfs:label "Keep-Alive Check" ;
    rdfs:comment "The keep-alive check is used to indicate whether or not a transfer can allow the sending account to be reduced to less than the existential deposit, causing it to be reaped." ;
    rdfs:subClassOf owl:Thing .
ponto:Teleport a owl:Class ;
    rdfs:label "Teleport" ;
    rdfs:comment "Send an asset from an account on one chain to an account on a different chain. This occurs by burning an amount on the sending chain and minting an equivalent amount on the destination chain." ;
    rdfs:subClassOf owl:Thing .
ponto:ReferenceCounter a owl:Class ;
    rdfs:label "RefCounter" ;
    rdfs:comment "Reference counters indicate the current state of an account. There are three types of reference counter: Sufficients, Consumers, and Providers." ;
    rdfs:subClassOf ponto:Component .
ponto:Sufficients a owl:Class ;
    rdfs:label "Sufficients" ;
    rdfs:comment "A reference counter to indicate if an account is self-sufficient and can exist by itself." ;
    rdfs:subClassOf ponto:ReferenceCounter .
ponto:Consumers a owl:Class ;
    rdfs:label "Consumers" ;
    rdfs:comment "A reference counter to indicate the number of other modules that currently depend on this account's existence. The account cannot be reaped until this is zero." ;
    rdfs:subClassOf ponto:ReferenceCounter .
ponto:Providers a owl:Class ;
    rdfs:label "Providers" ;
    rdfs:comment "A reference counter to indicate the number of other modules that allow this account to exist. The account may not be reaped until this (providers) and `sufficients` are both zero." ;
    rdfs:subClassOf ponto:ReferenceCounter .
ponto:LockType a owl:Class ;
    rdfs:label "Lock Type" ;
    rdfs:comment "Tokens may be locked. There are four types of lock: Staking, Democracy, Election, and Vesting." ;
    rdfs:subClassOf ponto:Component .
ponto:StakingLockType a owl:Class ;
    rdfs:label "Staking Lock Type" ;
    rdfs:comment "Probably the most common lock type. It applies when tokens are staked to nominate or validate. They can be bonded or unbonding." ;
    rdfs:subClassOf ponto:LockType .
ponto:DemocracyLockType a owl:Class ;
    rdfs:label "Democracy Lock Type" ;
    rdfs:comment "A lock type that applies when participating in democracy, usually through voting in referenda, either directly or through a delegation. See this page for more information on democracy locks." ;
    rdfs:subClassOf ponto:LockType .
ponto:ElectionLockType a owl:Class ;
    rdfs:label "Election Lock Type" ;
    rdfs:comment "A lock type that applies when voting for Council members." ;
    rdfs:subClassOf ponto:LockType .
ponto:VestingLockType a owl:Class ;
    rdfs:label "Vesting Lock Type" ;
    rdfs:comment "A lock type that can be applied by the sender of tokens through a 'vested transfer'. These tokens are received locked, and unlock over a period of time, usually in small increments. Vesting tokens unlock based on a vesting schedule and are considered lazy payouts, but they can be used for any other action that introduces a lock." ;
    rdfs:subClassOf ponto:LockType .
# literals
ponto:Balance a owl:Class ;
    rdfs:label "Balance" ;
    rdfs:comment "Token balance controlled by an account holder" ;
    rdfs:subClassOf ponto:Component .
ponto:ReservedBalance a owl:Class ;
    rdfs:label "Reserved Balance" ;
    rdfs:comment "Certain actions require reserving transferable tokens to use space in the chain state. These tokens act as a deposit that is set aside for an operation and still belongs to the account holder but cannot be used for other operations. The tokens are reserved for as long as the reason exists. Once the reason is removed, the balance becomes transferable once again." ;
    rdfs:subClassOf ponto:Balance .
ponto:ReservationReason a owl:Class ;
    rdfs:label "Reservation Reason" ;
    rdfs:comment "Certain actions require reserving transferable tokens to use space in the chain state. These tokens act as a deposit that is set aside for an operation and still belongs to the account holder but cannot be used for other operations. The tokens are reserved for as long as the reason exists. Once the reason is removed, the balance becomes transferable once again." ;
    rdfs:subClassOf ponto:Component .
ponto:LockedBalance a owl:Class ;
    rdfs:label "Locked Balance" ;
    rdfs:comment "When tokens are used to serve their utility purpose on the chain, they are locked. The account holder still controls locked tokens. They cannot be transferred, but they can be used for multiple operations at the same time. For example, the same locked tokens can be used to nominate validators and vote in democracy." ;
    rdfs:subClassOf ponto:Balance .
ponto:TransferableBalance a owl:Class ;
    rdfs:label "Transferable Balance" ;
    rdfs:comment "Transferable tokens are fully available. These tokens are the ones that can be transferred, used to pay transaction fees, and become locked or reserved for other purposes. " ;
    rdfs:subClassOf ponto:Balance .
# relationships
ponto:hasLockType a owl:ObjectProperty ;
        rdfs:domain ponto:LockedBalance ;
        rdfs:range ponto:LockType .
ponto:hasAddress a owl:DatatypeProperty ;
    rdfs:comment "An account has an address." ;
    rdfs:domain ponto:Account ;
    rdfs:range xsd:string .
ponto:hasRefCountValue a owl:DatatypeProperty ;
    rdfs:domain ponto:RefCounter ;
    rdfs:range xsd:integer .
ponto:hasSufficients a owl:ObjectProperty ;
    rdfs:domain ponto:Account ;
    rdfs:range ponto:Sufficients .
ponto:hasConsumers a owl:ObjectProperty ;
    rdfs:domain ponto:Account ;
    rdfs:range ponto:Consumers .
ponto:hasProviders a owl:ObjectProperty ;
    rdfs:domain ponto:Account ;
    rdfs:range ponto:Providers .
ponto:bonding a rdf:Property ;
    rdfs:comment "A process by which tokens can be 'frozen' in exchange for some other benefit. For example, staking is a form of bonding for which you receive rewards in exchange for securing the network. You can also bond tokens in exchange for a parachain slot." ;
    rdfs:domain ponto:Asset ;
    rdfs:range xsd:decimal .
# a wallet has one or more accounts
ponto:hasAccount a owl:ObjectProperty ;
    rdfs:domain ponto:Wallet ;
    rdfs:range ponto:Account .
ponto:hasAccount owl:inverseOf ponto:isAccountOf .
ponto:accountCreated a owl:DatatypeProperty ;
    rdfs:comment "The timestamp when the account was created." ;
    rdfs:domain ponto:Account ;
    rdfs:range xsd:dateTimeStamp .
# an account has one or more types of tokens
ponto:hasToken a owl:ObjectProperty ;
    rdfs:domain ponto:Account ;
    rdfs:range ponto:Asset .
# balance of a token
ponto:hasBalanceValue a owl:DatatypeProperty ;
    rdfs:domain ponto:Balance ;
    rdfs:range xsd:decimal .
ponto:hasTransferableBalance a owl:ObjectProperty ;
    rdfs:domain ponto:FungibleToken ;
    rdfs:range ponto:TransferableBalance .
ponto:hasReservedBalance a owl:ObjectProperty ;
    rdfs:domain ponto:FungibleToken ;
    rdfs:range ponto:ReservedBalance .
ponto:reservedFor a owl:ObjectProperty ;
    rdfs:comment "Tokens can be reserved for various reasons that use space in the chain state. Unlike locks, reserves do stack. So, each new action that requires a deposit reserves the necessary amount added to any previous reserves that might exist." ;
    rdfs:domain ponto:ReservedBalance ;
    rdfs:range ponto:ReservationReason .
ponto:hasReasonDescription a owl:DatatypeProperty ;
    rdfs:domain ponto:ReservationReason ;
    rdfs:range xsd:string .
ponto:makesReservation a owl:ObjectProperty ;
    rdfs:domain ponto:LedgerRecord ;
    rdfs:range ponto:ReservedBalance .
ponto:hasLockedBalance a owl:ObjectProperty ;
    rdfs:domain ponto:FungibleToken ;
    rdfs:range ponto:LockedBalance .
ponto:hasSymbol a owl:DatatypeProperty ;
    rdfs:domain ponto:FungibleToken ;
    rdfs:range xsd:string .
ponto:hasName a owl:DatatypeProperty ;
    rdfs:domain ponto:FungibleToken ;
    rdfs:range xsd:string .
# native tokens
ponto:DOT a owl:Class ;
    rdfs:label "DOT" ;
    rdfs:comment "The native token for Polkadot. DOT serves three purposes: network governance (allowing them to vote on-chain upgrades and other exceptional events), general operation (rewarding good actors and punishing bad actors), and bonding (adding new parachains by 'freezing' DOT while they are connected the Relay Chain)." ;
    rdfs:subClassOf ponto:NativeToken .
ponto:KSM a owl:Class ;
    rdfs:label "KSM" ;
    rdfs:comment "The native token for the Kusama network" ;
    rdfs:subClassOf ponto:NativeToken .
# smart contract platforms and other toolings in the Polkadot Ecosystem
ponto:Ink a ponto:ProgrammingLanguage ;
    rdfs:label "Ink!" ;
    rdfs:comment "ink! is an eDSL (Embedded Domain Specific Language) to write smart contracts in Rust for blockchains built on the Substrate framework. ink! contracts are compiled to WebAssembly." .
ponto:Frontier a ponto:Runtime ;
    rdfs:label "Frontier" ;
    rdfs:comment "Frontier is the suite that provides an Ethereum compatibility layer for Substrate. It allows you to run EVM contracts natively in Substrate, tightly integrated with the rest of the Substrate ecosystem." .
ponto:Wasm a ponto:VirtualMachine ;
    rdfs:label "WebAssembly" ;
    rdfs:comment "WebAssembly (abbreviated Wasm) is an instruction format for a virtual, stack-based machine. Polkadot Runtime Modules are compiled to WebAssembly. Also known as Wasm." ;
    ponto:targetArchitectureOf ponto:Ink .
ponto:PolkadotJS a ponto:SDK ;
    rdfs:label "Polkadot JS" ;
    rdfs:comment "A collection of libraries and tools for building Polkadot applications in JavaScript." .
ponto:LIBP2P a ponto:SDK ;
    rdfs:label "LIBP2P" ;
    rdfs:comment "An open-source library for encrypted peer-to-peer communications and other networking functions. More information at: https://libp2p.io/" .
ponto:ParityTechnologies a owl:Thing ;
    rdfs:label "Parity Technologies" ;
    rdfs:comment "A company, founded by Dr. Gavin Wood and Dr. Jutta Steiner, that is developing Substrate, Kusama and Polkadot. It has also released several other projects including Parity Ethereum and Parity Secret Store." .
# transactions in the Polkadot Ecosystem
ponto:Extrinsic a owl:Class ;
    rdfs:label "Extrinsic" ;
    rdfs:comment "A SCALE encoded array consisting of a version number, signature, and varying data types indicating the resulting runtime function to be called, including the parameters required for that function to be executed. These state changes are invoked from the outside world, i.e. they are not part of the system itself. Extrinsics can take two forms, 'inherents' and ‘transactions'." ;
    rdfs:subClassOf ponto:LedgerRecord .
ponto:Remarks a owl:Class ;
    rdfs:label "Remarks" ;
    rdfs:comment "Remarks are extrinsics with no effect. They provide additional information to external inputs, acting as notes. Remarks are stored alongside block records and do not change the chain's storage; the information is not stored in the chain's trie, but along blocks." ;
    rdfs:subClassOf ponto:Extrinsic .
ponto:Inherent a owl:Class ;
    rdfs:label "Inherent" ;
    rdfs:comment "Extrinsics that are 'inherently true'. Inherents are not gossiped on the network and are put into blocks by the block author. They are not provably true the way that the desire to send funds is, therefore they do not carry a signature. A blockchain's runtime must have rules for validating inherents. For example, timestamps are inherents. They are validated by being within some margin that each validator deems reasonable." ;
    rdfs:subClassOf ponto:LedgerRecord .
ponto:Transaction a owl:Class ;
    rdfs:label "Transaction" ;
    rdfs:comment "A transaction in a blockchain, representing the transfer of assets between two parties." ;
    rdfs:subClassOf ponto:Extrinsic .
ponto:Transfer a owl:Class ;
    rdfs:label "Transfer" ;
    rdfs:comment "Send an asset from one account to another. This generally refers to transfers that occur only on the same chain." ;
    rdfs:subClassOf ponto:LedgerRecord .
ponto:XCMTransfer a owl:Class ;
    rdfs:label "XCM Transfer" ;
    rdfs:comment "Refers to transfers that occur between different chains." ;
    rdfs:subClassOf ponto:Transfer .
ponto:Sender a owl:Class ;
    rdfs:label "Sender" ;
    rdfs:comment "The entity sending assets in a blockchain transaction." ;
    rdfs:subClassOf ponto:Account .
ponto:Beneficiary a owl:Class ;
    rdfs:label "Beneficiary" ;
    rdfs:comment "The recipient of the value of a transfer or of a referendum" ;
    rdfs:subClassOf ponto:Account .
# properties
ponto:incrementsRefCount a owl:ObjectProperty ;
    rdfs:domain ponto:LedgerRecord ;
    rdfs:comment "A Transaction or an Account can increment a Reference Counter" ;
    rdfs:range ponto:ReferenceCounter .
ponto:hasTransferBeneficiary a owl:ObjectProperty ;
    rdfs:domain ponto:Transfer ;
    rdfs:range ponto:Beneficiary .
ponto:hasExtrinsicId a owl:DatatypeProperty ;
    rdfs:domain ponto:Extrinsic ;
    rdfs:range xsd:string .
ponto:hasXCMTransfer a owl:ObjectProperty ;
    rdfs:domain ponto:Extrinsic ;
    rdfs:range ponto:XCMTransfer .
ponto:hasTransferAsset a owl:ObjectProperty ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range ponto:Asset .
ponto:hasTransferAmountSent a owl:DatatypeProperty ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:decimal .
ponto:hasTransferAmountSentUSD a owl:DatatypeProperty ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:decimal .
ponto:hasTransferAmountReceived a owl:DatatypeProperty ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:decimal .
ponto:hasTransferAmountReceivedUSD a owl:DatatypeProperty ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:decimal .
ponto:recordedOn a owl:ObjectProperty ;
    owl:inverseOf ponto:hasRecord ;
    rdfs:comment "The block where a record is stored" ;
    rdfs:domain ponto:LedgerRecord ;
    rdfs:range ponto:Block .
ponto:amountTransferred a owl:DatatypeProperty ;
    rdfs:comment "The amount of assets transferred in a Polkadot blockchain transaction." ;
    rdfs:domain ponto:Transaction ;
    rdfs:range xsd:decimal .
ponto:amountXCMTransferred a owl:DatatypeProperty ;
    rdfs:comment "The amount of assets transferred in a XCM transaction." ;
    rdfs:domain ponto:XCMTransaction ;
    rdfs:range xsd:decimal .
ponto:typeOfAsset a owl:DatatypeProperty ;
    rdfs:comment "The type of asset transferred in a Polkadot blockchain transaction." ;
    rdfs:domain ponto:Transaction ;
    rdfs:range xsd:string .
ponto:hasTimestamp a owl:DatatypeProperty ;
    rdfs:comment "The timestamp of the transaction." ;
    rdfs:domain ponto:Transaction ;
    rdfs:range xsd:dateTimeStamp .
ponto:hasOriginationTimestamp a owl:DatatypeProperty ;
    rdfs:comment "The timestamp in the origination of the XCM transfer." ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:dateTimeStamp .
ponto:hasOriginationSection rdfs:domain ponto:Transaction ;
    rdfs:range ponto:PalletSection .
ponto:hasOriginationMethod rdfs:domain ponto:Transaction ;
    rdfs:range ponto:PalletMethod .
ponto:hasDestinationTimestamp a owl:DatatypeProperty ;
    rdfs:comment "The timestamp in the destination of the XCM transfer." ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:dateTimeStamp .
ponto:hasDestinationExecutionStatus a owl:DatatypeProperty ;
    rdfs:comment "The status of the XCM transfer execution in the destination." ;
    rdfs:domain ponto:XCMTransfer ;
    rdfs:range xsd:string .
ponto:hasSender a owl:ObjectProperty ;
    rdfs:comment "The sender of a Polkadot blockchain transaction." ;
    rdfs:domain ponto:Transaction ;
    rdfs:range ponto:Sender .
# Polkadot wallet instances
ponto:Enkrypt a ponto:BrowserWallet ;
    rdfs:label "Enkrypt" ;
    rdfs:comment "A Polkadot wallet that supports multiple chains and allows users to manage their assets." .
ponto:PolkaGate a ponto:BrowserWallet ;
    rdfs:label "PolkaGate" ;
    rdfs:comment "A Polkadot wallet that supports multiple chains and allows users to manage their assets." .
ponto:SubWallet a ponto:BrowserWallet ;
    rdfs:label "SubWallet" ;
    rdfs:comment "A Polkadot wallet that supports Substrate-based chains and allows users to manage their assets." .
ponto:Talisman a ponto:BrowserWallet ;
    rdfs:label "Talisman" ;
    rdfs:comment "A Polkadot wallet that is designed to work with validator nodes and supports hardware wallets." .
ponto:FearlessWallet a ponto:MobileWallet ;
    rdfs:label "Fearless Wallet" ;
    rdfs:comment "A Polkadot wallet that is designed to be user-friendly and secure, with support for staking and governance." .
ponto:NovaWallet a ponto:MobileWallet ;
    rdfs:label "Nova Wallet" ;
    rdfs:comment "A Polkadot wallet that supports multiple chains and allows users to manage their assets." .
ponto:PolkaWallet a ponto:MobileWallet ;
    rdfs:label "PolkaWallet" ;
    rdfs:comment "A Polkadot wallet that supports multiple chains and allows users to manage their assets." .
ponto:RelayChain a owl:Class ;
    rdfs:label "Relay Chain" ;
    rdfs:comment "A central hub in the Polkadot architecture, which coordinates and connects all the parachains in the ecosystem. It coordinates consensus and communication between parachains (and external chains, via bridges)." ;
    rdfs:subClassOf ponto:Blockchain .
ponto:Parachain a owl:Class ;
    rdfs:label "Parachain" ;
    rdfs:comment "A blockchain that meets several characteristics that allow it to work within the confines of the Polkadot Host. Also known as 'parallelized chain'." ;
    rdfs:subClassOf ponto:DistributedLedger .
ponto:SystemParachain a owl:Class ;
    rdfs:label "System Parachain" ;
    rdfs:comment "A parachain that is part of the Polkadot core protocol. System parachains are allocated a parachain execution core by governance rather than auction." ;
    rdfs:subClassOf ponto:Parachain .
ponto:Parathread a owl:Class ;
    rdfs:label "Parathread" ;
    rdfs:comment "A blockchain that works within the confines of the Polkadot Host, thus allowing it to connect to the Polkadot Relay Chain. This can be done either by becoming a parachain or connecting on a 'pay as you go' basis. All parachains start their life-cycle as a parathread." ;
    rdfs:subClassOf ponto:Parachain .
ponto:StandaloneChain a owl:Class ;
    rdfs:label "Standalone Chain" ;
    rdfs:comment "A non-Substrate blockchain." ;
    rdfs:subClassOf ponto:DistributedLedger .
ponto:XCM a owl:Class ;
    rdfs:label "XCM" ;
    rdfs:comment "The Cross-Consensus Message Format, or XCM, is a messaging format and language used to communicate between consensus systems." ;
    rdfs:subClassOf owl:Thing .
ponto:XCMChannel a owl:Class ;
    rdfs:label "XCM Channel" ;
    rdfs:comment "Represents a communication pathway between two or more Parachains or between a Parachain and the Relay Chain. It allows for the exchange of messages, instructions, and assets across different chains, facilitating inter-chain communication." ;
    rdfs:subClassOf owl:Thing .
ponto:LeasePeriod a owl:Class ;
    rdfs:label "Lease Period" ;
    rdfs:comment "A particular amount of time that a parachain for which the parachain can connect to the Relay Chain." ;
    rdfs:subClassOf owl:Thing .
ponto:AvailabilityCores a owl:Class ;
    rdfs:label "Availability Cores" ;
    rdfs:comment "Slots used to process parachains. The runtime assigns each parachain to an availability core and validators can fetch information about the cores, such as parachain block candidates, by calling the appropriate Runtime API." ;
    rdfs:subClassOf ponto:Component .
ponto:ParachainRegistry a owl:Class ;
    rdfs:label "Parachain Registry" ;
    rdfs:comment "A relatively simple database-like construct that holds both static and dynamic information on each chain." ;
    rdfs:subClassOf owl:Thing .
ponto:paraId a xsd:integer ;
    rdfs:label "Parachain Id" ;
    rdfs:comment "A unique numeric (non-negative integer) identifier for a parachain." .
ponto:paraName a xsd:string ;
    rdfs:label "Parachain Name" ;
    rdfs:comment "Name of the parachain." .
ponto:hasNetType a rdf:Property ;
        rdfs:domain ponto:DistributedLedger ;
        rdfs:range xsd:string .
ponto:mainNet a xsd:string ;
    rdfs:label "mainnet" ;
    rdfs:comment "A distributed ledger fully developed and deployed where transactions are broadcasted, verified, and recorded." .
ponto:testNet a xsd:string ;
    rdfs:label "testnet" ;
    rdfs:comment "A distributed ledger to be used for testing and experimentation without risk to real funds or the main network." .
ponto:hasNetType rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:mainNet, ponto:testNet
] .
ponto:Bridge a owl:Class ;
    rdfs:label "Bridge" ;
    rdfs:comment "A parachain that acts as an intermediary between the Polkadot Relay Chain and an external chain, in such a way that it appears to the Relay Chain that the external chain is a parachain (i.e., meets the Polkadot Host's requirements of parachains). Bridges allow for interaction between other blockchains, such as Ethereum and Bitcoin, that are not natively compatible with Polkadot." ;
    rdfs:subClassOf ponto:Parachain .
# Classes for Polkadot nodes
ponto:Node a owl:Class ;
    rdfs:label "Node" ;
    rdfs:comment "A component that participates in the Polkadot network." ;
    rdfs:subClassOf ponto:Component .
ponto:FullNode a owl:Class ;
    rdfs:label "Full Node" ;
    rdfs:comment "A node that stores a full copy of the blockchain and participates in block validation." ;
    rdfs:subClassOf ponto:Node .
ponto:LightNode a owl:Class ;
    rdfs:label "Light Node" ;
    rdfs:comment "A node that only stores a subset of the blockchain data and relies on other nodes for information." ;
    rdfs:subClassOf ponto:Node .
# in the polkadot ecosystem, a validator can operate as either full nodes or as light nodes, depending on its resources and network requirements.
ponto:Validator a owl:Class ;
    rdfs:label "Validator" ;
    rdfs:comment "A node responsible for validating transactions and blocks." ;
    rdfs:subClassOf ponto:Node .
# in the polkadot ecosystem, a collator is desirably a full nodes, but it is not a requirement.
ponto:Collator a owl:Class ;
    rdfs:label "Collator" ;
    rdfs:comment "A node that maintains a parachain by collecting parachain transactions and producing state transition proofs for the validators." ;
    rdfs:subClassOf ponto:Node ;
    rdfs:runsOn ponto:Parachain .
# ledger basic definitions
ponto:LedgerArchitecture a owl:Class ;
    rdfs:label "Ledger Architecture" ;
    rdfs:comment "A specific design and organization of components that make up a distributed and decentralized ledger system. It defines the rules and protocols for how different parts of the system interact with each other to achieve the desired functionality and security." ;
    rdfs:subClassOf ponto:Architecture .
ponto:PolkadotArchitecture a owl:Class ;
    rdfs:label "Polkadot Architecture" ;
    rdfs:comment "An architecture based on a multichain network that includes several different types of chains, each with its own specific purpose and functionality. The core of the architecture is a relay chain that facilitates communication with parachains and parathreads." ;
    rdfs:subClassOf ponto:LedgerArchitecture .
ponto:LedgerRecord a owl:Class ;
    rdfs:label "Ledger Record" ;
    rdfs:comment "A digital record that contains information about a specific event or transaction that has occurred on the blockchain." ;
    rdfs:subClassOf ponto:Component .
ponto:Blockchain a owl:Class ;
    rdfs:label "Blockchain" ;
    rdfs:comment "A distributed database that maintains a continuously growing list of ordered ledger records, called blocks." ;
    rdfs:subClassOf ponto:DistributedLedger .
ponto:Scalability a owl:Class ;
    rdfs:label "Scalability" ;
    rdfs:comment "While an ambiguous concept, [blockchain] scalability can be understood as the ability for the network to scale in capabilities (e.g. processing more transactions) when needed." ;
    rdfs:subClassOf owl:Thing .
ponto:Block a owl:Class ;
    rdfs:label "Block" ;
    rdfs:comment "Data structure within a blockchain database, where transaction data in a blockchain are permanently recorded." ;
    rdfs:subClassOf ponto:Component .
ponto:Sealing a owl:Class ;
    rdfs:label "Sealing" ;
    rdfs:comment "The process of adding a block to the Relay Chain. Note that finalization is a separate process - blocks are finalized sometime after they are sealed." ;
    rdfs:subClassOf ponto:Component .
ponto:Genesis a owl:Class ;
    rdfs:label "Genesis" ;
    rdfs:comment "The origin of a blockchain, also known as block 0. It can also be used to reference the initial state of the blockchain at origination." ;
    rdfs:subClassOf ponto:Block .
ponto:ReGenesis a owl:Class ;
    rdfs:label "Re-Genesis" ;
    rdfs:comment "Re-Genesis is the process of exporting the current chain state, and creating a new chain that builds on it. Re-Genesis will involve stop-the-world migration, which results in a period of time when no actual blocks are added to the blockchain. In a way, re-genesis can be viewed as a hard fork process. A formal design of Re-Genesis on Substrate is still under development - Re-Genesis Rationale and Design." ;
    rdfs:subClassOf ponto:HardFork .
ponto:HardFork a owl:Class ;
    rdfs:label "Hard Fork" ;
    rdfs:comment "A permanent diversion of a blockchain occurs quickly due to a high priority change in a consensus rule. Clients who follow a hard fork always need to upgrade their clients to continue following the upgraded chain. Hard forks are considered permanent divergences of a chain for which non-upgraded clients are following consensus rules incompatible to the ones followed by upgraded clients." ;
    rdfs:subClassOf ponto:Blockchain .
ponto:SoftFork a owl:Class ;
    rdfs:label "Soft Fork" ;
    rdfs:comment "A backward compatible change to client code causes upgraded clients to start mining a new chain. Requires a 'vote-by-hashrate' of a majority of miners to enact successfully. Soft forks are considered temporary divergences in a chain since non-upgraded clients do not follow the new consensus rules but upgraded clients are still compatible with old consensus rules." ;
    rdfs:subClassOf ponto:Blockchain .
ponto:HardSpoon a owl:Class ;
    rdfs:label "Hard Spoon" ;
    rdfs:comment "Defined by Jae Kwon of Cosmos as 'a new chain that takes into account state from an existing chain; not to compete, but to provide broad access.' A non-contentious blockchain that inherits the state of the underlying blockchain and creates a new branch of the same blockchain." ;
    rdfs:subClassOf ponto:Blockchain .
ponto:Interoperability a owl:Class ;
    rdfs:label "Interoperability" ;
    rdfs:comment "The ability for some sort of system to exchange and make use of information often compared to 'cross-chain' technologies." ;
    rdfs:subClassOf owl:Thing .
ponto:BlockExplorer a owl:Class ;
    rdfs:label "Block Explorer" ;
    rdfs:comment "An application that allows a user to explore the different blocks on a blockchain." ;
    rdfs:subClassOf ponto:Component .
ponto:NodeExplorer a owl:Class ;
    rdfs:label "Node Explorer" ;
    rdfs:comment "A tool that gives you information about a node, such as the latest blocks sealed, finalized, and the current chain state as known by that node." ;
    rdfs:subClassOf ponto:Component .
# Defining Relationships
# connecting testnets with a mainnet
ponto:tests a owl:ObjectProperty ;
    rdfs:domain ponto:DistributedLedger ;
    rdfs:range ponto:DistributedLedger .
# a collator runs on a parachain
ponto:runsOn a owl:ObjectProperty ;
    rdfs:domain ponto:Collator ;
    rdfs:range ponto:Parachain .
# a block composes a blockchain
ponto:composes a owl:ObjectProperty ;
    owl:inverseOf ponto:composedBy ;
    rdfs:domain ponto:Block ;
    rdfs:range ponto:Blockchain .
# parachain
# the polkadot architecture has parachains
ponto:PolkadotArchitecture ponto:hasComponent ponto:Parachain .
# the polkadot architecture has a relay chain
ponto:PolkadotArchitecture ponto:hasComponent ponto:RelayChain .
# A relay chain has parachains
ponto:hasParachain a owl:ObjectProperty ;
    rdfs:domain ponto:RelayChain ;
    rdfs:range ponto:Parachain .
# A parachain has a lease period
ponto:hasLease rdfs:domain ponto:Parachain ;
    rdfs:range ponto:LeasePeriod .
# A parachain has an identifier
ponto:hasParaId a owl:DatatypeProperty ;
        rdfs:domain ponto:Parachain ;
        rdfs:range ponto:paraId .
# A parachain has a name
ponto:hasParaName a owl:DatatypeProperty ;
        rdfs:domain ponto:Parachain ;
        rdfs:range ponto:paraName .
# bridge
ponto:bridgeRelayChain a owl:ObjectProperty ;
    rdfs:domain ponto:RelayChain ;
    rdfs:range ponto:Bridge .
ponto:bridgeExternalChain a owl:ObjectProperty ;
    rdfs:domain ponto:Bridge ;
    rdfs:range ponto:DistributedLedger .
# staking in the Polkadot Ecosystem
ponto:Stake a owl:Class ;
    rdfs:label "Stake" ;
    rdfs:comment "A measure of the amount of tokens held by an account, used to determine the account's influence in the consensus and governance mechanisms." ;
    rdfs:subClassOf ponto:Component .
ponto:StakeHolder a owl:Class ;
    rdfs:label "Stake Holder" ;
    rdfs:comment "An account holder who holds a stake in a blockchain ecosystem and participates in the consensus and governance mechanisms." ;
    rdfs:subClassOf ponto:AccountHolder .
ponto:StakePool a owl:Class ;
    rdfs:label "Stake Pool" ;
    rdfs:comment "A group of stakeholders who combine their stakes to increase their chances of being selected as validators." ;
    rdfs:subClassOf ponto:Component .
# Relationships
ponto:hasStake a owl:ObjectProperty ;
    rdfs:domain ponto:StakeHolder ;
    rdfs:range ponto:Stake ;
    rdfs:comment "A StakeHolder that holds a certain amount of stake in the Polkadot network." .
# A Stake Holder can belong to multiple Stake Pools
ponto:belongsToPool a owl:ObjectProperty ;
    rdfs:comment "Relates a stake holder to the stake pool they belong to." ;
    rdf:type owl:ObjectProperty ;
    rdfs:domain ponto:StakeHolder ;
    rdfs:range ponto:StakePool .
# A Stake Pool can have multiple Stake Holders
ponto:hasStakeHolder a owl:ObjectProperty ;
    rdfs:comment "Relates a stake pool to the stake holders that belong to it." ;
    rdf:type owl:ObjectProperty ;
    rdfs:domain ponto:StakePool ;
    rdfs:range ponto:StakeHolder .
# distributed and decentralized ledgers that are part of or related to the Polkadot Ecosystem
# polkadot
ponto:Polkadot a ponto:RelayChain ;
    rdfs:label "Polkadot" ;
    rdfs:comment "A heterogeneous, multi-chain network allowing various blockchains of different characteristics to perform arbitrary, cross-chain communication under shared security." ;
    ponto:hasNetType ponto:mainnet ;
    ponto:hasParachain ponto:Collectives ;
    ponto:hasParachain ponto:Statemint ;
    ponto:hasParachain ponto:Acala ;
    ponto:hasParachain ponto:Moonbeam ;
    ponto:hasParachain ponto:Astar ;
    ponto:hasParachain ponto:Phala .
ponto:Collectives a ponto:Parachain ;
    rdfs:label "Collectives" ;
    rdfs:comment "The Polkadot Collectives parachain was added in Referendum 81 and exists only on Polkadot (i.e., there is no Kusama equivalent). The Collectives chain hosts on-chain collectives that serve the Polkadot network, such as the Fellowship and Polkadot Alliance." .
ponto:PolkadotAlliance a ponto:Collective ;
    rdfs:label "Polkadot Alliance" ;
    rdfs:comment "The Polkadot Alliance is an on-chain collective founded by Acala, Astar, Interlay, Kilt, Moonbeam, Phala, and Subscan, to establish standards and ethics for open-source development in referendum #94. It aims to support development standards and expose bad actors within the ecosystems of Polkadot." .
ponto:Statemint a ponto:Parachain ;
    rdfs:label "Statemint" ;
    rdfs:comment "A generic assets parachain which provides functionality for deploying and transferring assets — both Fungible and Non-Fungible Tokens (NFTs)." ;
    ponto:hasNetType ponto:mainnet .
ponto:Acala a ponto:Parachain ;
    rdfs:label "Acala" ;
    rdfs:comment "An all-in-one DeFi hub boasting a suite of applications for end-users, as well as a stablecoin (aUSD) and a smart contract platform for DeFi developers to build their projects on." ;
    ponto:hasNetType ponto:mainnet .
ponto:Moonbeam a ponto:Parachain ;
    rdfs:label "Moonbeam" ;
    rdfs:comment "A cross-chain connected smart contract platform that makes it easy to build multichain dapps on Polkadot using familiar Ethereum tools." ;
    ponto:hasNetType ponto:mainnet .
ponto:Astar a ponto:Parachain ;
    rdfs:label "Astar" ;
    rdfs:comment "A smart contract platform in the Polkadot ecosystem, supporting both Wasm and EVM" ;
    ponto:hasNetType ponto:mainnet .
ponto:Phala a ponto:Parachain ;
    rdfs:label "Phala" ;
    rdfs:comment "A next-generation decentralized cloud computing network built to power Web3 with security, scalability, and cost-effectiveness at the heart of its offering, designed to bring decentralized compute cloud to the masses." ;
    ponto:hasNetType ponto:mainnet .
# kusama
ponto:Kusama a ponto:RelayChain ;
    rdfs:label "Kusama" ;
    rdfs:comment "The 'canary network' for Polkadot. It consists of an early-release, unaudited version of the Polkadot software. It is not a testnet - after the transition to NPoS, the network is entirely in the hands of the community (i.e., Kusama token holders)." ;
    ponto:hasParachain ponto:Statemine ;
    ponto:hasNetType ponto:mainnet .
ponto:Statemine a ponto:Parachain ;
    rdfs:label "Statemine" ;
    rdfs:comment "A blockchain built using Substrate, the same technology used to build Polkadot." ;
    ponto:hasNetType ponto:mainnet .
# testnets
ponto:Westmint a ponto:Blockchain ;
    rdfs:label "Westmint" ;
    rdfs:comment "A Polkadot test network used for experimentation and development." ;
    ponto:hasNetType ponto:testnet ;
    ponto:tests ponto:Polkadot .
ponto:Westend a ponto:Blockchain ;
    rdfs:label "Westend" ;
    rdfs:comment "A Polkadot test network used for experimentation and development." ;
    ponto:hasNetType ponto:testnet ;
    ponto:tests ponto:Polkadot .
ponto:Rococo a ponto:Blockchain ;
    rdfs:label "Rococo" ;
    rdfs:comment "A Polkadot test network used for experimentation and development." ;
    ponto:hasNetType ponto:testnet ;
    ponto:tests ponto:Polkadot .
# consensus mechanisms in the Polkadot Ecosystem
ponto:FinalityGadget a owl:Class ;
    rdfs:label "Finality Gadget" ;
    rdfs:comment "A mechanism that determines finality." ;
    rdfs:subClassOf ponto:Component .
ponto:ConsensusMechanism a owl:Class ;
    rdfs:label "Consensus Mechanism" ;
    rdfs:comment "The mechanism by which nodes on a distributed ledger agree on a set of valid transactions and blocks." ;
    rdfs:subClassOf ponto:FinalityGadget .
ponto:ProofOfWork a owl:Class ;
    rdfs:label "Proof of Work" ;
    rdfs:comment "A method of selecting participants in a consensus system, typically the longest chain rule, in which participants try to solve a puzzle like finding a partial pre-image of a hash. Normally, a Proof-of-Work system can have any number of participants." ;
    rdfs:subClassOf ponto:ConsensusMechanism .
ponto:ProofOfStake a owl:Class ;
    rdfs:label "Proof of Stake" ;
    rdfs:comment "A method of selecting participation in a consensus system, in which participants are chosen based on how many tokens they have at stake (at risk of loss due to misbehavior). Normally, Proof-of-Stake systems limit the number of participants." ;
    rdfs:subClassOf ponto:ConsensusMechanism .
ponto:NPoS a owl:Class ;
    rdfs:label "Nominated Proof of Stake" ;
    rdfs:comment "A Proof-of-Stake system where nominators back validators with their own stake as a show of faith in the good behavior of the validator. Nominated Proof-of-Stake differs from the more generic concept Delegated Proof-of-Stake in that nominators are subject to loss of stake if they nominate a bad validator; delegators are not subject to loss of stake based on the behavior of the validator. Note that some other blockchain technologies may use the term Delegated Proof-of-Stake, even if delegators can be slashed. Polkadot uses the Phragmén method to allocate stake to nominees." ;
    rdfs:subClassOf ponto:ProofOfStake .
ponto:Grandpa a owl:Class ;
    rdfs:label "GRANDPA" ;
    rdfs:comment "GRANDPA (GHOST-based Recursive Ancestor Deriving Prefix Agreement) is a proof-of-stake consensus mechanism used in the Polkadot ecosystem." ;
    rdfs:subClassOf ponto:ProofOfStake .
ponto:Finality a owl:Class ;
    rdfs:label "Finality" ;
    rdfs:comment "The property of a block that cannot be reverted. Generally, created blocks are not final until some point in the future - perhaps never, in the case of 'probabilistic finality'. The Polkadot Relay Chain uses a deterministic finality gadget known as GRANDPA." ;
    rdfs:subClassOf owl:Thing .
ponto:Safety a owl:Class ;
    rdfs:label "Safety" ;
    rdfs:comment "The property of a distributed system indicating that a particular state transition will not be reverted. GRANDPA provides deterministic safety. That is, for a state changed marked as 'safe' or 'final', one would require a hard fork to revert that change." ;
    rdfs:subClassOf owl:Thing .
ponto:Session a owl:Class ;
    rdfs:label "Session" ;
    rdfs:comment "A session is a Substrate implementation term for a period that has a constant set of validators. Validators can only join or exit the validator set at a session change." ;
    rdfs:subClassOf owl:Thing .
ponto:Slashing a owl:Class ;
    rdfs:label "Slashing" ;
    rdfs:comment "The removal of a percentage of an account's DOT as a punishment for a validator acting maliciously or incompetently (e.g., equivocating or remaining offline for an extended period)." ;
    rdfs:subClassOf owl:Thing .
ponto:Nominator a owl:Class ;
    rdfs:label "Nominator" ;
    rdfs:comment "Accounts that select a set of validators to nominate by bonding their tokens. Nominators receive some of the validators' rewards, but are also liable for slashing if their nominated validators misbehave." ;
    rdfs:subClassOf ponto:StakeHolder .
ponto:Era a owl:Class ;
    rdfs:label "Era" ;
    rdfs:comment "A (whole) number of sessions, which is the period that the validator set (and each validator's active nominator set) is recalculated and where rewards are paid out." ;
    rdfs:subClassOf ponto:Component .
ponto:ActiveNomination a owl:Class ;
    rdfs:label "Active Nomination" ;
    rdfs:comment "A validator (or validators) that a nominator has selected to nominate and is actively validating this era. The nominator is placing their stake behind this validator for this era and will potentially receive staking rewards in return for doing so." ;
    rdfs:subClassOf ponto:Validator .
ponto:InactiveNomination a owl:Class ;
    rdfs:label "Inactive Nomination" ;
    rdfs:comment "A validator (or validators) that a nominator has selected to nominate, but is not actively validating this era. This type of nomination may become active in a future era." ;
    rdfs:subClassOf ponto:Validator .
ponto:Attestation a owl:Class ;
    rdfs:label "Era" ;
    rdfs:comment "A type of message that validators broadcast that says whether they think a parachain candidate block is valid or invalid." ;
    rdfs:subClassOf ponto:Component .
ponto:Authority a owl:Class ;
    rdfs:label "Authority" ;
    rdfs:comment "A generic term for the role in a blockchain that can participate in the consensus mechanisms. In GRANDPA, the authorities vote on chains they consider final. In BABE, the authorities are block producers. Authority sets can be chosen to be mechanisms such as Polkadot's NPoS algorithm." ;
    rdfs:subClassOf ponto:Component .
ponto:Babe a owl:Class ;
    rdfs:label "BABE" ;
    rdfs:comment "Blind Assignment for Blockchain Extension (BABE) is the Polkadot's block production mechanism." ;
    rdfs:subClassOf ponto:Component .
ponto:BLS a owl:Class ;
    rdfs:label "BLS" ;
    rdfs:comment "Boneh-Lynn-Shacham (BLS) is a signature scheme for voting in consensus algorithms and threshold signatures. BLS signatures have a slow signing, very slow verification, require slow and much less secure pairing friendly curves, and tend towards dangerous malleability. Yet, BLS permits a diverse array of signature aggregation options far beyond any other known signature scheme, which makes BLS a preferred scheme for voting in consensus algorithms and threshold signatures." ;
    rdfs:subClassOf ponto:Component .
ponto:Candidate a owl:Class ;
    rdfs:label "Candidate" ;
    rdfs:comment "Is a submitted parachain block to the relay chain validators. A parachain block stops being referred to as a candidate as soon it has been finalized." ;
    rdfs:subClassOf ponto:Block .
ponto:Collations a owl:Class ;
    rdfs:label "Collations" ;
    rdfs:comment "Parachain blocks or candidates that are being proposed to the Polkadot relay chain validators. More specifically, a collation is a data structure which contains the proposed parachain candidate, including an optional validation parachain Runtime update and upward messages." ;
    rdfs:subClassOf ponto:Candidate .
ponto:Commission a owl:Class ;
    rdfs:label "Commission" ;
    rdfs:comment "Determines the rate of distribution for the remaining rewards set out for the nominators that are backing that validator." ;
    rdfs:subClassOf ponto:Component .
ponto:DutyRoster a owl:Class ;
    rdfs:label "Duty Roster" ;
    rdfs:comment "A lookup table that specifies the job that a particular validator is required to do (i.e. attest to the validity of a specific parachain). The duty roster routinely shuffles the validator set into different subsets per parachain." ;
    rdfs:subClassOf ponto:Component .
ponto:Epoch a owl:Class ;
    rdfs:label "Epoch" ;
    rdfs:comment "An epoch is a time duration in the BABE protocol that is broken into smaller time slots." ;
    rdfs:subClassOf ponto:Component .
ponto:EpochTimeSlot a owl:Class ;
    rdfs:label "Epoch Time Slot" ;
    rdfs:comment "A time slot that compose an epoch." ;
    rdfs:subClassOf ponto:Component .
ponto:SlotLeader a owl:Class ;
    rdfs:label "Slot Leader" ;
    rdfs:comment "Each time slot that compose an epoch has at least one slot leader who has the right to propose a block." ;
    rdfs:subClassOf ponto:Component .
ponto:Equivocation a owl:Class ;
    rdfs:label "Equivocation" ;
    rdfs:comment "Providing conflicting information to the network. BABE equivocation entails creating multiple blocks in the same slot. GRANDPA equivocation would consist of signing multiple conflicting chains." ;
    rdfs:subClassOf owl:Thing .
ponto:Liveness a owl:Class ;
    rdfs:label "Liveness" ;
    rdfs:comment "The property of a distributed system is that it will eventually come to some sort of consensus. A system stuck in an infinite loop would not be considered live, even if computations are taking place; a system that eventually provides a result, even if incorrect or it takes a long time, is considered to have liveness." ;
    rdfs:subClassOf owl:Thing .
ponto:NextSession a owl:Class ;
    rdfs:label "Next Session" ;
    rdfs:comment "This indicates that the validator will be a member of the active set in the next session." ;
    rdfs:subClassOf owl:Thing .
ponto:OnlineMessage a owl:Class ;
    rdfs:label "Online Message" ;
    rdfs:comment "This is a message that is broadcast by a validator to verify to the network that the validator is online, even if they haven't published a block this epoch. This is sometimes referred to as 'ImOnline'." ;
    rdfs:subClassOf owl:Thing .
ponto:Oversubscribed a owl:Class ;
    rdfs:label "Oversubscribed" ;
    rdfs:comment "If more than the maximum number of nominators nominate the same validator, it is 'oversubscribed', and only the top staked nominators (ranked by the amount of stake, up to the maximum number of nominators) are paid rewards. Other nominators will receive no rewards for that era. The current maximum number of nominators is 512 on Polkadot, but it can be modified via governance." ;
    rdfs:subClassOf owl:Thing .
ponto:Preimage a owl:Class ;
    rdfs:label "Preimage" ;
    rdfs:comment "The on-chain proposals do not require the entire image of extrinsics and data (for instance the WASM code, in case of upgrades) to be submitted, but would rather just need that image's hash. That preimage can be submitted and stored on-chain against the hash later, upon the proposal's dispatch." ;
    rdfs:subClassOf owl:Thing .
ponto:ProofOfValidity a owl:Class ;
    rdfs:label "Proof of Validity" ;
    rdfs:comment "A proof produced by parachain collators. Based on this proof and the parachain registry, a validator can verify that a parachain has properly executed its state transition function. Proofs of Validity go into the Relay Chain blocks." ;
    rdfs:subClassOf owl:Thing .
ponto:RandomSeed a owl:Class ;
    rdfs:label "Random Seed" ;
    rdfs:comment "A random seed is a pseudo-random number available on-chain. It is used in various places of the Polkadot protocol, most prominently in BABE the block production mechanism." ;
    rdfs:subClassOf owl:Thing .
# literals
ponto:capacity a xsd:integer ;
    rdfs:label "capacity" ;
    rdfs:comment "The maximum number of nominators signalling intent to nominate a validator (and thus could potentially actively nominate that validator in the next session). This maximum number will equal the number of nominators necessary to oversubscribe a validator. Any validator which is 'at capacity' or higher may potentially be oversubscribed in the next session; a validator that is not at capacity cannot be oversubscribed unless more nominators select it before the next election." .
# relationships
ponto:producesProof a owl:ObjectProperty ;
    rdfs:domain ponto:Collator ;
    rdfs:range ponto:ProofOfValidity .
ponto:hasTimeSlot a owl:ObjectProperty ;
    rdfs:domain ponto:Epoch ;
    rdfs:range xsd:EpochTimeSlot .
ponto:hasSlotLeader a owl:ObjectProperty ;
    rdfs:domain ponto:EpochTimeSlot ;
    rdfs:range xsd:SlotLeader .
ponto:blocksNomination a rdf:Property ;
    rdfs:label "blocks nomination" ;
    rdfs:comment "Indicates that a validator does not currently allow any more nominations. This is controlled by the validator." ;
    rdfs:domain ponto:Validator ;
    rdfs:range xsd:boolean .
ponto:hasDuty a owl:ObjectProperty ;
    rdfs:domain ponto:Validator ;
    rdfs:range ponto:DutyRoster .
ponto:validatorAtCapacity a owl:ObjectProperty ;
    rdfs:comment "The maximum number of nominators signalling intent to nominate a validator (and thus could potentially actively nominate that validator in the next session). This maximum number will equal the number of nominators necessary to oversubscribe a validator. Any validator which is 'at capacity' or higher may potentially be oversubscribed in the next session; a validator that is not at capacity cannot be oversubscribed unless more nominators select it before the next election." ;
    rdfs:domain ponto:Validator ;
    rdfs:range xsd:integer .
ponto:validatorAtCapacity rdfs:subPropertyOf [
        rdf:type owl:FunctionalProperty ;
        owl:inverseOf owl:hasValue ;
        owl:hasValue ponto:capacity
] .
ponto:hasValidator a owl:ObjectProperty ;
    rdfs:domain ponto:Collator ;
    rdfs:range ponto:Validator .
ponto:hasNominator a owl:ObjectProperty ;
    rdfs:domain ponto:StakeHolder ;
    rdfs:range ponto:Nominator .
ponto:proposesBlock a owl:ObjectProperty ;
    rdfs:domain ponto:Validator ;
    rdfs:range ponto:Transaction ;
    rdfs:comment "A Validator node that proposes a block in the Polkadot network." .
ponto:nominates a owl:ObjectProperty ;
    rdfs:domain ponto:Nominator ;
    rdfs:range ponto:Validator ;
    rdfs:comment "A Nominator nominates a validator in the Polkadot network." .
ponto:validatesBlock a owl:ObjectProperty ;
    rdfs:domain ponto:Validator ;
    rdfs:range ponto:Transaction ;
    rdfs:comment "A Validator node that validates a block in the Polkadot network." .
ponto:validatesTransaction a owl:ObjectProperty ;
    rdfs:domain ponto:Validator ;
    rdfs:range ponto:Transaction ;
    rdfs:comment "A Validator node that validates a transaction." .
ponto:buildsBlock a owl:ObjectProperty ;
    rdfs:domain ponto:Collator ;
    rdfs:range ponto:Transaction ;
    rdfs:comment "A Collator node that builds a block for a specific parachain." .
ponto:collectsTransaction a owl:ObjectProperty ;
    rdfs:domain ponto:Collator ;
    rdfs:range ponto:Transaction ;
    rdfs:comment "A Collator node that collects transactions for a specific parachain." .
ponto:usesProofOfStake a owl:ObjectProperty ;
    rdfs:domain ponto:ProofOfStake ;
    rdfs:range ponto:Validator ;
    rdfs:comment "A Validator that participates in the ProofOfStake consensus mechanism." .
